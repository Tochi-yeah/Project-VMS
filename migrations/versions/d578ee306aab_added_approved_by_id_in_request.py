"""Added approved_by_id in request

Revision ID: d578ee306aab
Revises: d6dbed47b8b8
Create Date: 2025-08-29 23:48:31.299418

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd578ee306aab'
down_revision = 'd6dbed47b8b8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('request', schema=None) as batch_op:
        batch_op.alter_column('unique_code',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.String(length=32),
               nullable=True)
        batch_op.alter_column('group_code',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=32),
               existing_nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               nullable=False)
        batch_op.drop_column('code_used')

    with op.batch_alter_table('visitor_log', schema=None) as batch_op:
        batch_op.alter_column('visitor_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=120),
               nullable=True)
        batch_op.alter_column('purpose',
               existing_type=sa.VARCHAR(length=200),
               nullable=True)
        batch_op.alter_column('person_to_visit',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
        batch_op.alter_column('unique_code',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.String(length=32),
               existing_nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('visit_session_id',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('timestamp',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
        # batch_op.create_unique_constraint(None, ['visit_session_id'])  # This line is commented out or deleted
        batch_op.drop_column('check_in_time')
        batch_op.drop_column('check_out_time')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('visitor_log', schema=None) as batch_op:
        batch_op.add_column(sa.Column('check_out_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('check_in_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
        # batch_op.drop_constraint(None, type_='unique') # This line is commented out or deleted
        batch_op.alter_column('timestamp',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
        batch_op.alter_column('visit_session_id',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
        batch_op.alter_column('unique_code',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=10),
               existing_nullable=True)
        batch_op.alter_column('person_to_visit',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
        batch_op.alter_column('purpose',
               existing_type=sa.VARCHAR(length=200),
               nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=120),
               nullable=False)
        batch_op.alter_column('visitor_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('request', schema=None) as batch_op:
        batch_op.add_column(sa.Column('code_used', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.alter_column('status',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('group_code',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=64),
               existing_nullable=True)
        batch_op.alter_column('unique_code',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=10),
               nullable=False)

    # ### end Alembic commands ###